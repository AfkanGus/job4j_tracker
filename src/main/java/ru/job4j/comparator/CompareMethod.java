package ru.job4j.comparator;

/**
 * 1.0 Получение компаратора.Метод compare()
 * метод Comparator.compare() - базовый метод компаратора
 * Он принимает два объекта которые нужно сравнивать, этот метод,как и метод
 * compareTo() у интерфейса Comparable, возвращает число типа int.
 * Почему именно число? Что его значение значит?
 * Потому что возвращается именно число, и с помощью него можно лугко представить
 * три состояния: "меньше","больше","равн". т.е. для отрицптельного,полоительниго числа и 0.
 * По Числу мы можем определить порядок элементов. Именно ПОРЯДОК.
 * Порядок важен, потомучто компараторы используются при сортировках,в которых важно знать,
 * какой порядок мы хотим получить.
 * Рассмотрим метод Integer.compare(число1, число2)
 * - если результат отрицательный => чило 1 идет раньше чем число 2. Integer.compare(1,2) = -1;
 * - если результат равен 0 => что порядок не важен. Integer.compare(1,1)=0;
 * - если результат положительный => число 1 идет после 2. Integer.compare(2,1) = 1;
 * Ваша задача написать два метода, которые сравнивают два числа, первый сравнивает в
 * прямом порядке, второй в обратном порядке. Т.е. первый должен быть
 * аналогичен Integer.compare(), а второй должен возвращать обратный ему результат.
 */
public class CompareMethod {
    public static int ascendingCompare(int first, int second) {
        return Integer.compare(first, second);
    }

    public static int descendingCompare(int first, int second) {
        return Integer.compare(second, first);
    }
}
